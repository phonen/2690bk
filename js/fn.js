// Generated by CoffeeScript 1.11.1
(function() {
  var getDate, mainHg;

  mainHg = function(main_hg) {
    var _main;
    _main = $('.main');
    if ($(window).height() < $('.header').height() + $('.footer').height() + main_hg) {

    } else {
      return _main.height($(window).height() - $('.header').height() - $('.footer').height() - parseInt(_main.css('margin-top')) * 2 + 'px');
    }
  };

  getDate = function(rel) {
    var _rel, i, len, ref, results;
    ref = $("input[data-" + rel + "]");
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      _rel = ref[i];
      results.push($(_rel));
    }
    return results;
  };

  $(function() {
    var _input, _wrapper, main_hg;
    main_hg = $('.main').outerHeight(true);
    mainHg(main_hg);
    $(window).resize(function() {
      return mainHg(main_hg);
    });
    _wrapper = $('.log-reg-wrapper');
    _wrapper.css('margin-top', '-' + (_wrapper.outerHeight(true) / 2) + 'px').fadeIn(500);
    _input = $('.form-input input');
    _input.on({
      'input propertychange': function() {
        var _this;
        _this = $(this);
        if ($.trim(_this.val()) === '') {
          _this.siblings('label').fadeIn(100);
        } else {
          _this.siblings('label').fadeOut(100);
        }
        return _this.inputTest({
          empty_tips: false
        });
      },
      'blur': function() {
        var _this;
        _this = $(this);
        return _this.inputTest({
          empty_tips: false
        });
      },
      'keydown': function(e) {
        if (e.keyCode === 13) {
          return $('.submit-btn').trigger('click');
        }
      }
    });
    $('.code-img').on('click', function() {
      return $(this).attr('src', $(this).attr('src') + "?" + Math.random());
    });
    return $('.submit-btn').on('click', function() {
      var _data, refNum;
      if ($(this).hasClass('disabled')) {
        return false;
      } else if ($(this).hasClass('login-btn')) {
        _data = getDate('login');
        refNum = "";
        if ($("#data-ref-val").length > 0) {
          refNum = _data[2].val();
        }
        return $.ajax($(this).attr("data-action"), {
          type: 'POST',
          data: {
            "username": _data[0].val(),
            "password": _data[1].val(),
            "ref": refNum
          },
          dataType: 'json',
          timeout: 3000,
          beforeSend: (function(_this) {
            return function() {
              var a, i, len, ref;
              ref = getDate('login');
              for (i = 0, len = ref.length; i < len; i++) {
                a = ref[i];
                a.inputTest();
              }
              if ($('input.test-error').length > 0) {
                return false;
              } else {
                return $(_this).addClass('disabled');
              }
            };
          })(this),
          success: (function(_this) {
            return function(data) {
              if (data.status !== 1) {
                switch (data.data.status) {
                  case 1:
                    _data[0].inputTest({
                      id: 'sys',
                      return_info: '手机号码或邮箱错误！'
                    });
                    break;
                  case 2:
                    _data[1].inputTest({
                      id: 'sys',
                      return_info: '密码错误！'
                    });
                    break;
                  case 2:
                    _data[1].inputTest({
                      id: 'sys',
                      return_info: '手机号错误'
                    });
                }
              } else {
                switch (data.data.status) {
                  case 0:
                    $("#notify-login").trigger('click');
                    setTimeout(function() {
                      return window.location.href = data.data.url;
                    }, 500);
                }
              }
              return $(_this).removeClass('disabled');
            };
          })(this),
          error: (function(_this) {
            return function() {
              layer.msg('系统错误！请刷新后重试或联系客服人员');
              return $(_this).removeClass('disabled');
            };
          })(this)
        });
      } else if ($(this).hasClass('register-btn')) {
        _data = getDate('register');
        return $.ajax($(this).attr("data-action"), {
          type: 'POST',
          data: {
            "username": _data[0].val(),
            "code": _data[2].val(),
            "password": _data[3].val()
          },
          dataType: 'json',
          timeout: 3000,
          beforeSend: (function(_this) {
            return function() {
              var a, i, len;
              for (i = 0, len = _data.length; i < len; i++) {
                a = _data[i];
                a.inputTest();
              }
              if ($('input.test-error').length > 0) {
                return false;
              } else {
                return $(_this).addClass('disabled');
              }
            };
          })(this),
          success: (function(_this) {
            return function(data) {
              if (data.status === 1) {
                switch (data.data.status) {
                  case 0:
                    window.location.href = data.data.url;
                }
              } else {
                switch (data.data.status) {
                  case 1:
                    _data[0].inputTest({
                      id: 'sys',
                      return_info: '该账号已注册！'
                    });
                    break;
                  case 2:
                    _data[1].inputTest({
                      id: 'sys',
                      return_info: '密码长度错误！'
                    });
                    break;
                  case 3:
                    _data[1].inputTest({
                      id: 'sys',
                      return_info: '注册失败！请重试'
                    });
                    break;
                  case 4:
                    _data[1].inputTest({
                      id: 'sys',
                      return_info: '注册成功！请登录'
                    });
                    break;
                  case 5:
                    _data[2].inputTest({
                      id: 'sys',
                      return_info: '短信验证码错误'
                    });
                }
              }
              return $(_this).removeClass('disabled');
            };
          })(this),
          error: (function(_this) {
            return function() {
              layer.msg('系统错误！请刷新后重试或联系客服人员');
              return $(_this).removeClass('disabled');
            };
          })(this)
        });
      } else if ($(this).hasClass('step1-btn')) {
        _data = getDate('step1');
        return $.ajax('?r=login/forgetPwd', {
          type: 'POST',
          data: {
            "email": _data[0].val(),
            "code": _data[1].val(),
            "vc": _data[2].val()
          },
          timeout: 3000,
          dataType: 'json',
          beforeSend: (function(_this) {
            return function() {
              var a, i, len;
              for (i = 0, len = _data.length; i < len; i++) {
                a = _data[i];
                a.inputTest();
              }
              if ($('input.test-error').length > 0) {
                return false;
              } else {
                return $(_this).addClass('disabled');
              }
            };
          })(this),
          success: (function(_this) {
            return function(info) {
              if (info.status === 0) {
                if (info.data.status === 2) {
                  _data[0].inputTest({
                    id: 'sys',
                    return_info: '该邮箱不存在'
                  });
                } else if (info.data.status === 3) {
                  _data[1].inputTest({
                    id: 'sys',
                    return_info: '验证码输入错误，请重新输入'
                  });
                  $("#vc").val('');
                  $("#vc").nextAll(".test-tips").text('验证码输入错误，请重新输入').fadeIn(100);
                  $('.code-img').attr('src',$('.code-img').attr('src') + "?" + Math.random())
                } else if (info.data.status === 5) {
                  _data[0].inputTest({
                    id: 'sys',
                    return_info: '帐号错误或不存在'
                  });
                } else if (info.data.status === 6) {
                  _data[2].inputTest({
                    id: 'sys',
                    return_info: '短信验证码错误'
                  });
                }
                $(_this).removeClass('disabled');
              } else {
                window.location.href = info.data.url;
              }
              return $(_this).removeClass('disabled');
            };
          })(this),
          error: (function(_this) {
            return function() {
              layer.msg('系统错误！请刷新后重试或联系客服人员');
              return $(_this).removeClass('disabled');
            };
          })(this)
        });
      } else if ($(this).hasClass('reset-btn')) {
        _data = getDate('reset');
        return $.ajax('?r=login/reset', {
          type: 'POST',
          data: {
            "pwd": _data[0].val(),
            "p": window.location.href.split('p=')[1]
          },
          dataType: 'json',
          timeout: 3000,
          beforeSend: (function(_this) {
            return function() {
              var a, i, len;
              for (i = 0, len = _data.length; i < len; i++) {
                a = _data[i];
                a.inputTest();
              }
              if ($('input.test-error').length > 0) {
                return false;
              } else {
                return $(_this).addClass('disabled');
              }
            };
          })(this),
          success: (function(_this) {
            return function(info) {
              if (info.status === 0) {
                if (info.data.status === 0) {
                  layer.msg('密码修改失败，请刷新重试!');
                  $(_this).removeClass('disabled');
                }
              } else {
                window.location.href = info.data.url;
              }
              return $(_this).removeClass('disabled');
            };
          })(this),
          error: (function(_this) {
            return function() {
              layer.msg('系统错误！请刷新后重试或联系客服人员');
              return $(_this).removeClass('disabled');
            };
          })(this)
        });
      }
    });
  });

}).call(this);

//# sourceMappingURL=fn.js.map
